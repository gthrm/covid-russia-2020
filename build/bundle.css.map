{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Statistics from \"./components/Statistics.svelte\";\n  async function getData() {\n    const res = await fetch(\n      \"https://api.quarantine.country/api/v1/spots/week?region=russia\"\n    );\n    const { data } = await res.json();\n    if (data) {\n      return data;\n    } else {\n      throw new Error(data);\n    }\n  }\n  export let promise = getData();\n  export let name;\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 2em;\n    font-weight: 100;\n  }\n\n  .root {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    flex-wrap: wrap;\n  }\n\n  section {\n    padding: 10px 30px;\n    margin: 0 10px;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: 1200px;\n    }\n    h1 {\n      font-size: 4em;\n    }\n  }\n</style>\n\n<main>\n  <h1>{name}</h1>\n  {#await promise}\n    <p>...waiting</p>\n  {:then data}\n    <Statistics\n      data={{ labels: Object.keys(data), datasets: [{ label: 'Total Cases', data: Object.values(data).map((item) => item.total_cases), backgroundColor: 'orange', borderColor: 'blue', borderWidth: 1 }, { label: 'Deaths', data: Object.values(data).map((item) => item.deaths), backgroundColor: 'red', borderColor: 'blue', borderWidth: 1 }, { label: 'Recovered', data: Object.values(data).map((item) => item.recovered), backgroundColor: 'green', borderColor: 'blue', borderWidth: 1 }] }} />\n    <div class=\"root\">\n      {#each Object.entries(data) as [date, day]}\n        <section>\n          <h2>{date}</h2>\n          <p>Total cases: {day.total_cases.toLocaleString()}</p>\n          <p>Deaths: {day.deaths.toLocaleString()}</p>\n          <p>Recovered: {day.recovered.toLocaleString()}</p>\n          <p>Critical: {day.critical.toLocaleString()}</p>\n          <p>Tested: {day.tested.toLocaleString()}</p>\n        </section>\n      {/each}\n    </div>\n  {:catch error}\n    <p style=\"color: red\">{error.message}</p>\n  {/await}\n  <h4>\n    Information provided by open api service\n    <a\n      href=\"https://documenter.getpostman.com/view/1294665/SzYdSGX6\"\n      alt=\"Coronavirus API\">Coronavirus API</a>\n  </h4>\n</main>\n"
  ],
  "names": [],
  "mappings": "AAkBE,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,UAAU,CACvB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,MAAM,AACnB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,SAAS,CAAE,GAAG,AAChB,CAAC,AACH,CAAC"
}